{"name":"Git-reference","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Personal Git reference material","google":"","body":"# Initializing\r\n`git init` or `git clone <url>`\r\n\r\nLater add remote if “git init” was used\r\n\r\n```\r\ngit remote add origin git@github.com:username/Hello-World.git\r\ngit branch --set-upstream master origin/master\r\ngit pull -u origin master\r\n```\r\n\r\n#Merging\r\n\r\nKeep all of a file (ours or theirs) during a conflict\r\n\r\nKeep ours:\r\n`git checkout --ours filename.ext`\r\n\r\nKeep theirs:\r\n`git checkout --theirs filename.ext`\r\n\r\nthen `git add` the files\r\n\r\n#Reset\r\n`git reset HEAD`                # unstage: remove files from index (tracking)\r\n`git reset --soft HEAD^`     # uncommit: go back before last commit, with files in uncommitted state\r\n\r\n#Delete branch\r\n`git branch -D bugfix`\r\n\r\nor \r\n`git push origin --delete <branchName>`\r\n\r\n#Find what tag/release a commit is included with\r\n`git describe --contains <sha1>`\r\n\r\n\r\n***\r\n\r\n\r\n#Workflow\r\nhttp://notes.envato.com/developers/rebasing-merge-commits-in-git/\r\nhttp://nvie.com/posts/a-successful-git-branching-model/\r\n\r\n##Create feature branch\r\n[master] git checkout -b feature\r\n\r\n###Pull changes from origin/master into master\r\n[master] git fetch \r\n[master] git rebase -p origin/master\r\n\r\n###Pull changes from master into feature\r\n[feature] git rebase master\r\n\r\n###Merge feature branch into master\r\n[master] git merge --no-ff feature\r\n\r\n###Delete feature branch when done\r\n[master] git branch -d feature"}